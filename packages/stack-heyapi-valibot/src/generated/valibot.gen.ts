// This file is auto-generated by @hey-api/openapi-ts

import * as v from 'valibot';

/**
 * ユーザー情報
 */
export const vUser = v.object({
    id: v.string(),
    name: v.pipe(v.string(), v.minLength(1), v.maxLength(100)),
    email: v.pipe(v.string(), v.email()),
    createdAt: v.pipe(v.string(), v.isoTimestamp()),
    updatedAt: v.pipe(v.string(), v.isoTimestamp())
});

/**
 * エラータイプ
 */
export const vApiErrorType = v.picklist([
    'BadRequest',
    'ValidationFailed',
    'InvalidJson',
    'InvalidAgeRange',
    'Unauthorized',
    'Forbidden',
    'NotFound',
    'UserNotFound',
    'PostNotFound',
    'CommentNotFound',
    'TagNotFound',
    'Conflict',
    'EmailAlreadyExists',
    'TagAlreadyExists',
    'Unknown',
    'DatabaseError',
    'InternalServerError'
]);

/**
 * APIエラーレスポンス
 */
export const vErrorResponse = v.object({
    data: v.null(),
    status: v.picklist([
        'error'
    ]),
    errorType: vApiErrorType,
    message: v.string(),
    description: v.string()
});

/**
 * ユーザー作成リクエスト
 */
export const vCreateUser = v.object({
    name: v.pipe(v.string(), v.minLength(1), v.maxLength(100)),
    email: v.pipe(v.string(), v.email())
});

/**
 * タグ情報
 */
export const vTag = v.object({
    id: v.string(),
    name: v.pipe(v.string(), v.minLength(1), v.maxLength(50)),
    slug: v.pipe(v.string(), v.regex(/^[a-z0-9]+(?:-[a-z0-9]+)*$/)),
    createdAt: v.pipe(v.string(), v.isoTimestamp()),
    updatedAt: v.pipe(v.string(), v.isoTimestamp())
});

/**
 * 投稿とタグの関連情報
 */
export const vPostTag = v.object({
    postId: v.string(),
    tagId: v.string(),
    tag: vTag,
    taggedAt: v.pipe(v.string(), v.isoTimestamp())
});

/**
 * 投稿情報
 */
export const vPost = v.object({
    id: v.string(),
    title: v.pipe(v.string(), v.minLength(1), v.maxLength(200)),
    content: v.string(),
    published: v.boolean(),
    userId: v.string(),
    tags: v.array(vPostTag),
    createdAt: v.pipe(v.string(), v.isoTimestamp()),
    updatedAt: v.pipe(v.string(), v.isoTimestamp())
});

/**
 * 投稿作成リクエスト
 */
export const vCreatePost = v.object({
    title: v.pipe(v.string(), v.minLength(1), v.maxLength(200)),
    content: v.pipe(v.string(), v.minLength(1)),
    published: v.optional(v.boolean(), false),
    userId: v.string(),
    tagIds: v.optional(v.array(v.string()))
});

/**
 * 投稿更新リクエスト（PATCH）
 */
export const vUpdatePost = v.object({
    title: v.optional(v.pipe(v.string(), v.minLength(1), v.maxLength(200))),
    content: v.optional(v.pipe(v.string(), v.minLength(1))),
    published: v.optional(v.boolean()),
    tagIds: v.optional(v.array(v.string()))
});

/**
 * タグ作成リクエスト
 */
export const vCreateTag = v.object({
    name: v.pipe(v.string(), v.minLength(1), v.maxLength(50)),
    slug: v.pipe(v.string(), v.regex(/^[a-z0-9]+(?:-[a-z0-9]+)*$/))
});

/**
 * コメント情報
 */
export const vComment = v.object({
    id: v.string(),
    content: v.pipe(v.string(), v.minLength(1)),
    postId: v.string(),
    user: v.object({
        id: v.string(),
        name: v.pipe(v.string(), v.minLength(1), v.maxLength(100)),
        email: v.pipe(v.string(), v.email())
    }),
    createdAt: v.pipe(v.string(), v.isoTimestamp()),
    updatedAt: v.pipe(v.string(), v.isoTimestamp())
});

/**
 * コメント作成リクエスト
 */
export const vCreateComment = v.object({
    content: v.pipe(v.string(), v.minLength(1)),
    postId: v.string(),
    userId: v.string()
});

/**
 * コメント更新リクエスト
 */
export const vUpdateComment = v.object({
    content: v.pipe(v.string(), v.minLength(1))
});

/**
 * ユーザー一覧
 */
export const vGetUsersApiResponse = v.object({
    data: v.array(vUser),
    status: v.picklist([
        'success'
    ])
});

export const vPostUsersApiData = vCreateUser;

/**
 * 作成されたユーザー
 */
export const vPostUsersApiResponse = v.object({
    data: vUser,
    status: v.picklist([
        'success'
    ])
});

/**
 * 一意識別子（CUID形式）
 */
export const vDeleteUsersByIdApiParameterId = v.string();

/**
 * 削除成功
 */
export const vDeleteUsersByIdApiResponse = v.void();

/**
 * 一意識別子（CUID形式）
 */
export const vGetUsersByIdApiParameterId = v.string();

/**
 * ユーザー情報
 */
export const vGetUsersByIdApiResponse = v.object({
    data: vUser,
    status: v.picklist([
        'success'
    ])
});

/**
 * ページ番号（1から開始）
 */
export const vGetPostsApiParameterPage = v.optional(v.string(), '1');

/**
 * 1ページあたりの件数（最大100）
 */
export const vGetPostsApiParameterLimit = v.optional(v.string(), '10');

/**
 * ユーザーIDでフィルタリング
 */
export const vGetPostsApiParameterUserId = v.string();

/**
 * 公開状態でフィルタリング
 */
export const vGetPostsApiParameterPublished = v.string();

/**
 * 投稿一覧
 */
export const vGetPostsApiResponse = v.object({
    data: v.array(vPost),
    status: v.picklist([
        'success'
    ])
});

export const vPostPostsApiData = vCreatePost;

/**
 * 作成された投稿
 */
export const vPostPostsApiResponse = v.object({
    data: vPost,
    status: v.picklist([
        'success'
    ])
});

/**
 * 一意識別子（CUID形式）
 */
export const vDeletePostsByIdApiParameterId = v.string();

/**
 * 削除成功
 */
export const vDeletePostsByIdApiResponse = v.void();

/**
 * 一意識別子（CUID形式）
 */
export const vGetPostsByIdApiParameterId = v.string();

/**
 * 投稿情報
 */
export const vGetPostsByIdApiResponse = v.object({
    data: vPost,
    status: v.picklist([
        'success'
    ])
});

export const vPutPostsByIdApiData = vUpdatePost;

/**
 * 一意識別子（CUID形式）
 */
export const vPutPostsByIdApiParameterId = v.string();

/**
 * 更新された投稿
 */
export const vPutPostsByIdApiResponse = v.object({
    data: vPost,
    status: v.picklist([
        'success'
    ])
});

/**
 * タグ一覧
 */
export const vGetTagsApiResponse = v.object({
    data: v.array(vTag),
    status: v.picklist([
        'success'
    ])
});

export const vPostTagsApiData = vCreateTag;

/**
 * 作成されたタグ
 */
export const vPostTagsApiResponse = v.object({
    data: vTag,
    status: v.picklist([
        'success'
    ])
});

/**
 * 一意識別子（CUID形式）
 */
export const vDeleteTagsByIdApiParameterId = v.string();

/**
 * 削除成功
 */
export const vDeleteTagsByIdApiResponse = v.void();

/**
 * 一意識別子（CUID形式）
 */
export const vGetTagsByIdApiParameterId = v.string();

/**
 * タグ情報
 */
export const vGetTagsByIdApiResponse = v.object({
    data: vTag,
    status: v.picklist([
        'success'
    ])
});

/**
 * 投稿ID
 */
export const vGetCommentsApiParameterPostId = v.string();

/**
 * コメント一覧
 */
export const vGetCommentsApiResponse = v.object({
    data: v.array(vComment),
    status: v.picklist([
        'success'
    ])
});

export const vPostCommentsApiData = vCreateComment;

/**
 * 作成されたコメント
 */
export const vPostCommentsApiResponse = v.object({
    data: vComment,
    status: v.picklist([
        'success'
    ])
});

/**
 * 一意識別子（CUID形式）
 */
export const vDeleteCommentsByIdApiParameterId = v.string();

/**
 * 削除成功
 */
export const vDeleteCommentsByIdApiResponse = v.void();

/**
 * 一意識別子（CUID形式）
 */
export const vGetCommentsByIdApiParameterId = v.string();

/**
 * コメント情報
 */
export const vGetCommentsByIdApiResponse = v.object({
    data: vComment,
    status: v.picklist([
        'success'
    ])
});

export const vPutCommentsByIdApiData = vUpdateComment;

/**
 * 一意識別子（CUID形式）
 */
export const vPutCommentsByIdApiParameterId = v.string();

/**
 * 更新されたコメント
 */
export const vPutCommentsByIdApiResponse = v.object({
    data: vComment,
    status: v.picklist([
        'success'
    ])
});