// This file is auto-generated by @hey-api/openapi-ts

/**
 * ユーザー情報
 */
export type User = {
    /**
     * 一意識別子（CUID形式）
     */
    id: string;
    /**
     * 名前
     */
    name: string;
    /**
     * メールアドレス
     */
    email: string;
    /**
     * 作成日時
     */
    createdAt: string;
    /**
     * 更新日時
     */
    updatedAt: string;
};

/**
 * エラータイプ
 */
export type ApiErrorType = 'BadRequest' | 'ValidationFailed' | 'InvalidJson' | 'InvalidAgeRange' | 'Unauthorized' | 'Forbidden' | 'NotFound' | 'UserNotFound' | 'PostNotFound' | 'CommentNotFound' | 'TagNotFound' | 'Conflict' | 'EmailAlreadyExists' | 'TagAlreadyExists' | 'Unknown' | 'DatabaseError' | 'InternalServerError';

/**
 * エラータイプ
 */
export const ApiErrorType = {
    BAD_REQUEST: 'BadRequest',
    VALIDATION_FAILED: 'ValidationFailed',
    INVALID_JSON: 'InvalidJson',
    INVALID_AGE_RANGE: 'InvalidAgeRange',
    UNAUTHORIZED: 'Unauthorized',
    FORBIDDEN: 'Forbidden',
    NOT_FOUND: 'NotFound',
    USER_NOT_FOUND: 'UserNotFound',
    POST_NOT_FOUND: 'PostNotFound',
    COMMENT_NOT_FOUND: 'CommentNotFound',
    TAG_NOT_FOUND: 'TagNotFound',
    CONFLICT: 'Conflict',
    EMAIL_ALREADY_EXISTS: 'EmailAlreadyExists',
    TAG_ALREADY_EXISTS: 'TagAlreadyExists',
    UNKNOWN: 'Unknown',
    DATABASE_ERROR: 'DatabaseError',
    INTERNAL_SERVER_ERROR: 'InternalServerError'
} as const;

/**
 * APIエラーレスポンス
 */
export type ErrorResponse = {
    /**
     * エラー時は常にnull
     */
    data: null;
    /**
     * エラーステータス
     */
    status: 'error';
    errorType: ApiErrorType;
    /**
     * エラーメッセージ（ユーザー向け）
     */
    message: string;
    /**
     * エラーの詳細説明（開発者向け）
     */
    description: string;
};

/**
 * ユーザー作成リクエスト
 */
export type CreateUser = {
    /**
     * 名前
     */
    name: string;
    /**
     * メールアドレス
     */
    email: string;
};

/**
 * タグ情報
 */
export type Tag = {
    /**
     * 一意識別子（CUID形式）
     */
    id: string;
    /**
     * タグ名
     */
    name: string;
    /**
     * URLスラッグ
     */
    slug: string;
    /**
     * 作成日時
     */
    createdAt: string;
    /**
     * 更新日時
     */
    updatedAt: string;
};

/**
 * 投稿とタグの関連情報
 */
export type PostTag = {
    /**
     * 投稿ID
     */
    postId: string;
    /**
     * タグID
     */
    tagId: string;
    tag: Tag;
    /**
     * タグ付け日時
     */
    taggedAt: string;
};

/**
 * 投稿情報
 */
export type Post = {
    /**
     * 一意識別子（CUID形式）
     */
    id: string;
    /**
     * タイトル
     */
    title: string;
    /**
     * 本文
     */
    content: string;
    /**
     * 公開状態（必ずtrue/false）
     */
    published: boolean;
    /**
     * 投稿者ID
     */
    userId: string;
    /**
     * タグ一覧（空配列の可能性あり）
     */
    tags: Array<PostTag>;
    /**
     * 作成日時
     */
    createdAt: string;
    /**
     * 更新日時
     */
    updatedAt: string;
};

/**
 * 投稿作成リクエスト
 */
export type CreatePost = {
    /**
     * タイトル（必須）
     */
    title: string;
    /**
     * 本文（必須）
     */
    content: string;
    /**
     * 公開状態（省略時: false）
     */
    published?: boolean;
    /**
     * 投稿者ID（必須）
     */
    userId: string;
    /**
     * タグIDの配列（省略時: タグなし）
     */
    tagIds?: Array<string>;
};

/**
 * 投稿更新リクエスト（PATCH）
 */
export type UpdatePost = {
    /**
     * タイトル（更新する場合のみ指定）
     */
    title?: string;
    /**
     * 本文（更新する場合のみ指定）
     */
    content?: string;
    /**
     * 公開状態（更新する場合のみ指定）
     */
    published?: boolean;
    /**
     * タグIDの配列 - 省略時: 変更なし、空配列: すべて削除、配列指定: 完全置換
     */
    tagIds?: Array<string>;
};

/**
 * タグ作成リクエスト
 */
export type CreateTag = {
    /**
     * タグ名
     */
    name: string;
    /**
     * URLスラッグ
     */
    slug: string;
};

/**
 * コメント情報
 */
export type Comment = {
    /**
     * 一意識別子（CUID形式）
     */
    id: string;
    /**
     * コメント内容
     */
    content: string;
    /**
     * 投稿ID
     */
    postId: string;
    /**
     * ユーザー情報
     */
    user: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
        /**
         * 名前
         */
        name: string;
        /**
         * メールアドレス
         */
        email: string;
    };
    /**
     * 作成日時
     */
    createdAt: string;
    /**
     * 更新日時
     */
    updatedAt: string;
};

/**
 * コメント作成リクエスト
 */
export type CreateComment = {
    /**
     * コメント内容
     */
    content: string;
    /**
     * 投稿ID
     */
    postId: string;
    /**
     * ユーザーID
     */
    userId: string;
};

/**
 * コメント更新リクエスト
 */
export type UpdateComment = {
    /**
     * コメント内容
     */
    content: string;
};

export type GetUsersApiData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users';
};

export type GetUsersApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetUsersApiError = GetUsersApiErrors[keyof GetUsersApiErrors];

export type GetUsersApiResponses = {
    /**
     * ユーザー一覧
     */
    200: {
        data: Array<User>;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type GetUsersApiResponse = GetUsersApiResponses[keyof GetUsersApiResponses];

export type PostUsersApiData = {
    body: CreateUser;
    path?: never;
    query?: never;
    url: '/api/users';
};

export type PostUsersApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type PostUsersApiError = PostUsersApiErrors[keyof PostUsersApiErrors];

export type PostUsersApiResponses = {
    /**
     * 作成されたユーザー
     */
    201: {
        data: User;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type PostUsersApiResponse = PostUsersApiResponses[keyof PostUsersApiResponses];

export type DeleteUsersByIdApiData = {
    body?: never;
    path: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
    };
    query?: never;
    url: '/api/users/{id}';
};

export type DeleteUsersByIdApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type DeleteUsersByIdApiError = DeleteUsersByIdApiErrors[keyof DeleteUsersByIdApiErrors];

export type DeleteUsersByIdApiResponses = {
    /**
     * 削除成功
     */
    204: void;
};

export type DeleteUsersByIdApiResponse = DeleteUsersByIdApiResponses[keyof DeleteUsersByIdApiResponses];

export type GetUsersByIdApiData = {
    body?: never;
    path: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
    };
    query?: never;
    url: '/api/users/{id}';
};

export type GetUsersByIdApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetUsersByIdApiError = GetUsersByIdApiErrors[keyof GetUsersByIdApiErrors];

export type GetUsersByIdApiResponses = {
    /**
     * ユーザー情報
     */
    200: {
        data: User;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type GetUsersByIdApiResponse = GetUsersByIdApiResponses[keyof GetUsersByIdApiResponses];

export type GetPostsApiData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * ページ番号（1から開始）
         */
        page?: string;
        /**
         * 1ページあたりの件数（最大100）
         */
        limit?: string;
        /**
         * ユーザーIDでフィルタリング
         */
        userId?: string;
        /**
         * 公開状態でフィルタリング
         */
        published?: string;
    };
    url: '/api/posts';
};

export type GetPostsApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetPostsApiError = GetPostsApiErrors[keyof GetPostsApiErrors];

export type GetPostsApiResponses = {
    /**
     * 投稿一覧
     */
    200: {
        data: Array<Post>;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type GetPostsApiResponse = GetPostsApiResponses[keyof GetPostsApiResponses];

export type PostPostsApiData = {
    body: CreatePost;
    path?: never;
    query?: never;
    url: '/api/posts';
};

export type PostPostsApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type PostPostsApiError = PostPostsApiErrors[keyof PostPostsApiErrors];

export type PostPostsApiResponses = {
    /**
     * 作成された投稿
     */
    201: {
        data: Post;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type PostPostsApiResponse = PostPostsApiResponses[keyof PostPostsApiResponses];

export type DeletePostsByIdApiData = {
    body?: never;
    path: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
    };
    query?: never;
    url: '/api/posts/{id}';
};

export type DeletePostsByIdApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type DeletePostsByIdApiError = DeletePostsByIdApiErrors[keyof DeletePostsByIdApiErrors];

export type DeletePostsByIdApiResponses = {
    /**
     * 削除成功
     */
    204: void;
};

export type DeletePostsByIdApiResponse = DeletePostsByIdApiResponses[keyof DeletePostsByIdApiResponses];

export type GetPostsByIdApiData = {
    body?: never;
    path: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
    };
    query?: never;
    url: '/api/posts/{id}';
};

export type GetPostsByIdApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetPostsByIdApiError = GetPostsByIdApiErrors[keyof GetPostsByIdApiErrors];

export type GetPostsByIdApiResponses = {
    /**
     * 投稿情報
     */
    200: {
        data: Post;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type GetPostsByIdApiResponse = GetPostsByIdApiResponses[keyof GetPostsByIdApiResponses];

export type PutPostsByIdApiData = {
    body: UpdatePost;
    path: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
    };
    query?: never;
    url: '/api/posts/{id}';
};

export type PutPostsByIdApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type PutPostsByIdApiError = PutPostsByIdApiErrors[keyof PutPostsByIdApiErrors];

export type PutPostsByIdApiResponses = {
    /**
     * 更新された投稿
     */
    200: {
        data: Post;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type PutPostsByIdApiResponse = PutPostsByIdApiResponses[keyof PutPostsByIdApiResponses];

export type GetTagsApiData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/tags';
};

export type GetTagsApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetTagsApiError = GetTagsApiErrors[keyof GetTagsApiErrors];

export type GetTagsApiResponses = {
    /**
     * タグ一覧
     */
    200: {
        data: Array<Tag>;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type GetTagsApiResponse = GetTagsApiResponses[keyof GetTagsApiResponses];

export type PostTagsApiData = {
    body: CreateTag;
    path?: never;
    query?: never;
    url: '/api/tags';
};

export type PostTagsApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type PostTagsApiError = PostTagsApiErrors[keyof PostTagsApiErrors];

export type PostTagsApiResponses = {
    /**
     * 作成されたタグ
     */
    201: {
        data: Tag;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type PostTagsApiResponse = PostTagsApiResponses[keyof PostTagsApiResponses];

export type DeleteTagsByIdApiData = {
    body?: never;
    path: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
    };
    query?: never;
    url: '/api/tags/{id}';
};

export type DeleteTagsByIdApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type DeleteTagsByIdApiError = DeleteTagsByIdApiErrors[keyof DeleteTagsByIdApiErrors];

export type DeleteTagsByIdApiResponses = {
    /**
     * 削除成功
     */
    204: void;
};

export type DeleteTagsByIdApiResponse = DeleteTagsByIdApiResponses[keyof DeleteTagsByIdApiResponses];

export type GetTagsByIdApiData = {
    body?: never;
    path: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
    };
    query?: never;
    url: '/api/tags/{id}';
};

export type GetTagsByIdApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetTagsByIdApiError = GetTagsByIdApiErrors[keyof GetTagsByIdApiErrors];

export type GetTagsByIdApiResponses = {
    /**
     * タグ情報
     */
    200: {
        data: Tag;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type GetTagsByIdApiResponse = GetTagsByIdApiResponses[keyof GetTagsByIdApiResponses];

export type GetCommentsApiData = {
    body?: never;
    path?: never;
    query: {
        /**
         * 投稿ID
         */
        postId: string;
    };
    url: '/api/comments';
};

export type GetCommentsApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetCommentsApiError = GetCommentsApiErrors[keyof GetCommentsApiErrors];

export type GetCommentsApiResponses = {
    /**
     * コメント一覧
     */
    200: {
        data: Array<Comment>;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type GetCommentsApiResponse = GetCommentsApiResponses[keyof GetCommentsApiResponses];

export type PostCommentsApiData = {
    body: CreateComment;
    path?: never;
    query?: never;
    url: '/api/comments';
};

export type PostCommentsApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type PostCommentsApiError = PostCommentsApiErrors[keyof PostCommentsApiErrors];

export type PostCommentsApiResponses = {
    /**
     * 作成されたコメント
     */
    201: {
        data: Comment;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type PostCommentsApiResponse = PostCommentsApiResponses[keyof PostCommentsApiResponses];

export type DeleteCommentsByIdApiData = {
    body?: never;
    path: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
    };
    query?: never;
    url: '/api/comments/{id}';
};

export type DeleteCommentsByIdApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type DeleteCommentsByIdApiError = DeleteCommentsByIdApiErrors[keyof DeleteCommentsByIdApiErrors];

export type DeleteCommentsByIdApiResponses = {
    /**
     * 削除成功
     */
    204: void;
};

export type DeleteCommentsByIdApiResponse = DeleteCommentsByIdApiResponses[keyof DeleteCommentsByIdApiResponses];

export type GetCommentsByIdApiData = {
    body?: never;
    path: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
    };
    query?: never;
    url: '/api/comments/{id}';
};

export type GetCommentsByIdApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetCommentsByIdApiError = GetCommentsByIdApiErrors[keyof GetCommentsByIdApiErrors];

export type GetCommentsByIdApiResponses = {
    /**
     * コメント情報
     */
    200: {
        data: Comment;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type GetCommentsByIdApiResponse = GetCommentsByIdApiResponses[keyof GetCommentsByIdApiResponses];

export type PutCommentsByIdApiData = {
    body: UpdateComment;
    path: {
        /**
         * 一意識別子（CUID形式）
         */
        id: string;
    };
    query?: never;
    url: '/api/comments/{id}';
};

export type PutCommentsByIdApiErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Conflict
     */
    409: ErrorResponse;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type PutCommentsByIdApiError = PutCommentsByIdApiErrors[keyof PutCommentsByIdApiErrors];

export type PutCommentsByIdApiResponses = {
    /**
     * 更新されたコメント
     */
    200: {
        data: Comment;
        /**
         * 成功ステータス
         */
        status: 'success';
    };
};

export type PutCommentsByIdApiResponse = PutCommentsByIdApiResponses[keyof PutCommentsByIdApiResponses];

export type ClientOptions = {
    baseUrl: 'https://api.example.com' | 'https://api-stg.example.com' | 'https://api-dev.example.com' | 'http://localhost:3000' | 'http://localhost:3000' | 'http://localhost:4010' | (string & {});
};